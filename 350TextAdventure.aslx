<!--Saved by Quest 5.5.5328.26617-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="350TextAdventure">
    <gameid>36273a24-7575-4e61-8f7c-0bdf8d8b7fe9</gameid>
    <version>1.0</version>
    <firstpublished>2014</firstpublished>
    <showdescriptiononenter />
    <autodescription />
    <attr name="autodescription_youarein_useprefix" type="boolean">false</attr>
  </game>
  <object name="Starting Room">
    <inherit name="editor_room" />
    <exitslistprefix type="string"></exitslistprefix>
    <descprefix type="string"></descprefix>
    <description>You are in a small room. lit only by the dim glow of the monitors that fill the room. There are multiple keyboards and papers scattered on the desk, indicating a workstation for the room's occupant.</description>
    <enter type="script">
      AddToInventory (Check Ship Status)
    </enter>
    <firstenter type="script"><![CDATA[
      SetTimeout (4) {
        msg ("As if sensing your presence, a monitor turns on and text appears:<br/>\"Welcome to the Koncovka, Bishop.\"")
        SetTimeout (3) {
          msg ("Accessing personal file...")
          SetTimeout (1) {
            SetTimeout (2) {
              msg ("..")
              SetTimeout (2) {
                msg ("..")
                SetTimeout (2) {
                  msg ("NAME: Bishop<br/>ASSIGNMENT: Electronic Systems Monitor on the space station Koncovka.<br/>PRIMARYROLE: Ensure Optimal System Performance<br/>CLEARANCELEVEL: 10<br/>Allowed Access to All Systems.<br/>Preparing Status Report.")
                  SetTimeout (3) {
                    getStatus
                    msg ("Would you like to access repair droids(y/n)?")
                    SRAccessDroids
                  }
                }
              }
            }
          }
        }
      }
    ]]></firstenter>
    <beforefirstenter type="script">
    </beforefirstenter>
    <beforeenter type="script">
      play sound ("SRMusic.mp3", false, true)
    </beforeenter>
    <onexit type="script">
      stop sound
    </onexit>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <drop />
    </object>
    <exit to="Solar Array Station">
      <scenery />
      <visible />
      <locked type="boolean">false</locked>
    </exit>
    <object name="Check Ship Status">
      <inherit name="editor_object" />
      <visible />
      <alt type="stringlist">
        <value>Status</value>
      </alt>
      <displayverbs type="stringlist" />
      <inventoryverbs type="stringlist" />
      <take />
      <attr name="Solar Array Station Complete" type="boolean">false</attr>
      <attr name="Biosphere Complete" type="boolean">false</attr>
      <attr name="Med Bay Complete" type="boolean">false</attr>
      <attr name="Living Quarters Complete" type="boolean">false</attr>
      <attr name="Security Complete" type="boolean">false</attr>
      <print type="script">
        getStatus
      </print>
    </object>
  </object>
  <object name="AI Core">
    <inherit name="editor_room" />
    <descprefix type="string"></descprefix>
    <description>You're looking at the AI core. There are lots of computers and everything looks very sciencey!</description>
    <object name="Placeholder Computer">
      <inherit name="editor_object" />
      <description>It is a beautiful placeholder computer in this framework room! It is shiny and everything you've ever dreamed of in a computer!</description>
      <look>It is a beautiful placeholder object! It is shiny and everything you've ever dreamed of!</look>
    </object>
  </object>
  <object name="Solar Array Station">
    <inherit name="editor_room" />
    <descprefix>Control of droid initiated in</descprefix>
    <objectslistprefix>Droid detects</objectslistprefix>
    <exitslistprefix>You can switch to a droid in: </exitslistprefix>
    <description><![CDATA[“The robot boots up and surveys the area. In the center of the room there is a u-shaped desk. Water dripping from the roof has left an ugly stain on top and one of the drawers appears to be partly open. No human life is present. There is a green glow to the room and you realize it’s coming from the viscous liquid contained in the glass cylinders at the far end of the room. Capped with metal at the top and bottom, they appear to be batteries. There is a warning label stuck to the front of one, labelling it a highly corrosive material. A computer terminal is tucked away in the corner.”<br/>]]></description>
    <beforefirstenter type="script">
    </beforefirstenter>
    <object name="Solar Array Complete">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <scenery />
      <displayverbs type="stringlist" />
      <inventoryverbs type="stringlist" />
      <drop type="boolean">false</drop>
    </object>
    <exit name="Exit Solar to security" to="Security">
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>You do not have control of that Droid yet.</lockmessage>
    </exit>
    <exit name="Exit Solar to Biosphere" to="Hydroponic Biosphere">
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>You do not have control of that Droid yet.</lockmessage>
    </exit>
    <exit name="Exit Solar to Med Bay" to="Med Bay">
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>You do not have control of that Droid yet.</lockmessage>
    </exit>
    <exit name="Exit Solar to Living Quarters" to="Living Quarters">
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>You do not have control of that Droid yet.</lockmessage>
    </exit>
    <exit name="Exit Solar to AI Core" to="AI Core">
      <locked />
      <lockmessage>You do not have control of that Droid yet.</lockmessage>
    </exit>
    <object name="Desk">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <feature_container />
      <hidechildren type="boolean">false</hidechildren>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <look type="script"><![CDATA[
        SetTimeout (1) {
          msg ("There is a desk in the middle of the room. <br/>On it sits a terminal. No power is detected. ")
        }
        SetTimeout (1) {
          msg ("...")
        }
        SetTimeout (2) {
          msg ("Initial scans detect unknown objects in the drawer under the desk. ")
        }
        MakeObjectVisible (Drawer)
      ]]></look>
      <opendrawer type="script">
      </opendrawer>
      <object name="Drawer">
        <inherit name="editor_object" />
        <inherit name="container_closed" />
        <visible type="boolean">false</visible>
        <feature_container />
        <onopen type="script">
          MakeObjectVisible (Clipboard)
          MakeObjectVisible (Sticky Note)
          msg ("Inside the drawer is a Clipboard with a sticky note on it.")
        </onopen>
        <object name="Clipboard">
          <inherit name="editor_object" />
          <scenery type="boolean">false</scenery>
          <visible type="boolean">false</visible>
          <displayverbs type="stringlist">
            <value>Look at</value>
          </displayverbs>
          <look type="script"><![CDATA[
            msg ("On it is the ship's Manifest and a sticky note.<br/>The Manifest reads:<br/><br/>")
            picture ("Ship Manifest.png")
          ]]></look>
          <take />
        </object>
        <object name="Sticky Note">
          <inherit name="editor_object" />
          <take />
          <drop type="boolean">false</drop>
          <look><![CDATA[The sticky note reads   <br/><br/>“Remember to change the Terminal passcode. <br/>‘password’ does not meet security requirements”<br/>]]></look>
          <scenery type="boolean">false</scenery>
          <visible type="boolean">false</visible>
        </object>
      </object>
    </object>
    <object name="Large Battery Array">
      <inherit name="editor_object" />
      <attr name="feature_switchable" type="boolean">false</attr>
      <look><![CDATA[The droid scans a set of very large batteries. <br/>The wires trace back to the terminal.<br/>One wire in particular seems to be unhooked from the top of one of the batteries.]]></look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <plugin type="script">
        SwitchOn (Terminal)
      </plugin>
    </object>
    <object name="Terminal">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Use</value>
      </displayverbs>
      <feature_usegive />
      <attr name="feature_switchable" type="boolean">false</attr>
      <use type="script"><![CDATA[
        if (IsSwitchedOn(Terminal)) {
          msg ("please enter the password:<br/>")
          get input {
            if (result = "password") {
              msg ("Password Correct. <br/>")
              SetTimeout (2) {
                msg ("Droid initiated in Security Room")
                SetTimeout (1) {
                  msg ("Solar Array System rebooting. Power has been restored.")
                  SetTimeout (1) {
                    msg ("<br/>Access to Security now GRANTED")
                  }
                }
              }
            }
            else {
              msg ("Incorrect password. Terminal shutting down.")
            }
            SetObjectFlagOn (Check Ship Status, "Solar Array Station Complete")
            unlockExits
          }
        }
        else {
          msg ("The terminal doesn't respond to any key presses. It appears to not have any source of power. ")
        }
      ]]></use>
    </object>
  </object>
  <object name="Security">
    <inherit name="editor_room" />
    <description><![CDATA[The power station for the ($PLACEHOLDER DROID) is located between the doors to the security chief’s office on the left and the bathrooms to the right. Both are on the north wall. <br/><br/>In the north-eastern portion of the room are various kinds of desk and work stations for the security staff. In the north-west part of the room are the doors to the bathroom, a row of lockers, a couch, and a chair. These two sections of the room are divided by a frosted glass partition, slightly east of the chief’s door. <br/><br/>In the south-east corner of the room is a reception desk, which serves the primary role of monitoring internal and external communications, as well as dealing with any civilians on the station who need to talk to the security personnel. On the south wall behind the desk is a room that serves as both an interrogation room, and a quiet place for people to make long range calls off the station. <br/><br/>The south-west corner is dominated by holding cells, some of which have been temporarily converted to storage as the crime rate on the station is quite low.<br/><br/>{if Security.turret_online=True: A small turret slowly swivels back and forth on the ceiling above the door to the security chief's office. A blinking red light on the side indicates its readiness to repel unwanted intruders. }<br/><br/>{if Security.turret_online=False:A small turret points inward towards the room. You would guess it was never functioning if you hadn't turned it off. A steady green light shines on the side.}]]></description>
    <alias>Security/Communications Center</alias>
    <usedefaultprefix />
    <turret_online />
    <firstenter type="script"><![CDATA[
      msg ("As you move the robot forward towards the security chief's office, the ceiling-mounted turret quickly swivels towards you.<br/>Several gunshots ring out and your visual feed from the robot quickly turns to static.")
      SetTimeout (2) {
        msg ("ERROR: ROBOT IS OFFLINE. PREPARING NEW REPAIR BOT.")
        SetTimeout (2) {
          msg ("..")
          SetTimeout (2) {
            msg ("..")
            SetTimeout (2) {
              msg ("NEW ROBOT READY. REINITIALIZING SENSORY FEEDS.")
              SetTimeout (2) {
                msg ("The robot's visual feed appears again, its predecessors remains already swept away by the automated cleaning systems. You need to disable that turret before you can access the security chief's office.")
              }
            }
          }
        }
      }
    ]]></firstenter>
    <exit name="Exit Security to Solar" to="Solar Array Station">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Security to Biosphere" to="Hydroponic Biosphere">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Security to Med Bay" to="Med Bay">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Security to Living Quarters" to="Living Quarters">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Security to AI Core" to="AI Core">
      <locked />
    </exit>
    <object name="Security Complete">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <scenery />
      <displayverbs type="stringlist" />
      <inventoryverbs type="stringlist" />
      <drop type="boolean">false</drop>
    </object>
    <object name="Security Chief's Office">
      <inherit name="editor_room" />
      <drop type="boolean">false</drop>
      <feature_container />
      <alias>Security Chief's Office</alias>
      <description>This office belongs to the Chief of Security, K. Normandeau. The room contains a desk with a computer and a chair, file cabinets, and a few personal possessions. There are pictures on the desk and a medal for exceptional service on the wall.</description>
      <exit alias="south" to="Security">
        <inherit name="southdirection" />
      </exit>
      <object name="File Cabinets">
        <inherit name="editor_object" />
        <inherit name="openable" />
        <drop type="boolean">false</drop>
        <look>A regular, run of the mill file cabinet. </look>
        <feature_container />
        <openscript type="script">
          msg ("You open the file cabinet to find it empty.")
        </openscript>
        <closescript type="script">
          msg ("You shut the filing cabinet closed.")
        </closescript>
      </object>
      <object name="Computer Terminal">
        <inherit name="editor_object" />
        <look>The computer is turned on, with a blinking green terminal-entry sign in the top-left corner.</look>
        <feature_usegive />
        <enterpassword type="script">
          msg ("Whoops, this is a placeholder message because we're still implementing this puzzle.")
        </enterpassword>
        <use type="script">
          msg ("You may be able to signal the all-clear from this terminal and get security back online,")
          msg ("Send all-clear signal?")
          get input {
            if (IsRegexMatch("yes|y", LCase(result))) {
              msg ("All-clear sent.")
              set (Check Ship Status, "Security Complete", True)
            }
          }
        </use>
      </object>
      <object name="Medal">
        <inherit name="editor_object" />
        <look>$PLACEHOLDER MEDAL DESCRIPTION</look>
        <take />
        <takemsg>You place the medal in your droid's storage system.</takemsg>
        <drop type="boolean">false</drop>
      </object>
    </object>
    <object name="Washroom">
      <inherit name="editor_room" />
      <look>This is a standard washroom. It contains a sink, toilet, and urinal. There is a magazine on the counter.</look>
      <description>This is a standard washroom. It contains a sink, toilet, and urinal. There is a magazine on the counter.</description>
      <object name="Magazine">
        <inherit name="editor_object" />
        <look>The magazine reads: "Space Weddings: For all your galactic bridal needs!". The feature article is "Planning the Perfect Bachelorette Party When All Your Friends Are Light-Years Away!".</look>
        <take />
        <drop type="boolean">false</drop>
        <takemsg>The magazine has been added to your inventory.</takemsg>
      </object>
      <exit to="Security">
        <scenery />
      </exit>
    </object>
    <object name="Locker">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <feature_container />
      <nokeymessage>A lock prevents you from opening the locker.</nokeymessage>
      <autounlock />
      <unlockmessage>The lock falls to the ground and you open the door. Inside the locker is a jacket, a couple of books, and a bagged lunch that has long since grown fuzzy. On the inside of the door are pictures of a beautiful black cat.</unlockmessage>
      <keycount type="int">0</keycount>
      <look>A locked locker. The name tag on the front reads "F. Eisman".</look>
    </object>
    <exit to="Washroom">
      <scenery />
    </exit>
    <exit name="SecurityToSecOffice" to="Security Chief's Office">
      <scenery type="boolean">false</scenery>
      <locked />
      <lockmessage>The turret above the door is still active. You won't make the same mistake again.</lockmessage>
    </exit>
    <object name="First Desk">
      <inherit name="editor_object" />
      <look>This desk has been cleared of its computer or any other important equipment. On the top of the desk is a picture of a young man, surrounded by flowers and letters. A funeral announcement also lies on the desk.</look>
    </object>
    <object name="Second Desk">
      <inherit name="editor_object" />
      <look>The desk is entirely occupied by a powered-down computer terminal and several papers scattered across its surface ($WHAT ARE THESE PAPERS SHOULD WE DESCRIBE THEM?).</look>
    </object>
    <object name="Third Desk">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <look>The desk is dominated by multiple monitors and a {object:SecComputerTerminal}. This is where the person in charge of internal security works.</look>
      <feature_container />
      <hidechildren />
      <object name="SecComputerTerminal">
        <inherit name="editor_object" />
        <alias>Computer Terminal</alias>
        <look type="script">
          msg ("The computer is displaying a login screen with the message: \"SYSTEM LOCKED. OVERRIDE CODE REQUIRED.\"")
          msg ("The ($PLACEHOLDER DROID) has the ability to systems. You may be able to hack this terminal and shut off the turret in the room. Hack the terminal?")
          get input {
            if (IsRegexMatch ("y|yes", LCase(result))) {
              msg ("BEGINNING HACKING PROTOCOLS.")
              SecPuz1 (3)
            }
            else {
            }
          }
        </look>
      </object>
    </object>
    <object name="Fourth Desk">
      <inherit name="editor_object" />
      <look>The desk has a computer, the monitor tilted to one side. Judging from the several chewed pencils and oft-struck monitor, the desk's usual occupant has stress issues.</look>
    </object>
  </object>
  <object name="Hydroponic Biosphere">
    <inherit name="editor_room" />
    <exit name="Exit Biosphere to Solar" to="Solar Array Station">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Biosphere to Security" to="Security">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Biosphere to Med Bay" to="Med Bay">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Biosphere to Living Quarters" to="Living Quarters">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Biosphere to AI Core" to="AI Core">
      <locked />
    </exit>
    <object name="Hydroponic Biosphere Complete">
      <inherit name="editor_object" />
    </object>
  </object>
  <object name="Med Bay">
    <inherit name="editor_room" />
    <exit name="Exit Med Bay to Solar" to="Solar Array Station">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Med Bay to Security" to="Security">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Med Bay to Biosphere" to="Hydroponic Biosphere">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Med Bay to Living Quarters" to="Living Quarters">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Med Bay to AI Core" to="AI Core">
      <locked />
    </exit>
    <object name="Med Bay Complete">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <scenery />
      <displayverbs type="stringlist" />
      <inventoryverbs type="stringlist" />
      <drop type="boolean">false</drop>
    </object>
    <object name="large white board">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <attr name="feature_switchable" type="boolean">false</attr>
      <look type="script">
        if (not IsSwitchedOn(large white board)) {
          msg ("The whiteboard has no writing on it. ")
        }
        else if (IsSwitchedOn(large white board)) {
          if (not IsSwitchedOn(light switch)) {
            msg ("The whiteboard glows with luminescent writing. It reads:")
            SetFontSize (20)
            msg ("I've hidden the scalpel under the bed")
            SetFontSize (12)
          }
        }
      </look>
    </object>
    <object name="surgical cabinet">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <feature_container />
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Open</value>
        <value>Close</value>
      </displayverbs>
      <listchildren />
      <object name="blacklight bulb">
        <inherit name="editor_object" />
        <take />
      </object>
    </object>
    <object name="light switch">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <look>The light switch looks like it controls the room's lights.</look>
      <feature_switchable />
      <switchedon />
      <turnon type="script">
        if (ListContains(ScopeReachable(), this)) {
          if (this.switchedon) {
            msg (DynamicTemplate("AlreadySwitchedOn", this))
          }
          else {
            if (HasString(this, "switchonmsg")) {
              msg (this.switchonmsg)
            }
            else {
              msg (DynamicTemplate("SwitchedOn", this))
            }
            this.switchedon = true
          }
        }
        else {
          msg (DynamicTemplate("DefaultTurnOn", this))
        }
      </turnon>
      <turnoff type="script">
        if (ListContains(ScopeReachable(), this)) {
          if (not this.switchedon) {
            msg (DynamicTemplate("AlreadySwitchedOff", this))
          }
          else {
            if (HasString(this, "switchoffmsg")) {
              msg (this.switchoffmsg)
            }
            else {
              msg (DynamicTemplate("SwitchedOff", this))
            }
            this.switchedon = false
          }
        }
        else {
          msg (DynamicTemplate("DefaultTurnOff", this))
        }
      </turnoff>
    </object>
    <object name="Lamp">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <attr name="feature_switchable" type="boolean">false</attr>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <feature_usegive />
      <useon type="scriptdictionary">
        <item key="blacklight bulb">
          SwitchOn (large white board)
        </item>
      </useon>
    </object>
    <object name="Bed">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <feature_container />
      <listchildren />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <listchildrenprefix>Underneath is</listchildrenprefix>
      <lookunderneath type="script">
        HelperOpenObject (Bed)
        msg ("Under the bed is a scalpel.")
      </lookunderneath>
      <object name="scalpel">
        <inherit name="editor_object" />
        <take />
      </object>
    </object>
    <object name="Manual Override Box">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <feature_usegive />
      <feature_container />
      <isopen type="boolean">false</isopen>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <useon type="scriptdictionary">
        <item key="scalpel"><![CDATA[
          HelperOpenObject (Manual Override Box)
          msg ("The droid extends a small arm. ")
          SetTimeout (1) {
            msg ("Using the scalpel as a screwdriver it carefully and meticulously unscrews the 8 bolts that hold the front panel onto the override box.<br/>")
          }
          SetTimeout (1) {
            msg ("Inside the box is a red handle and a laminated peice of paper that reads:<br/>\"MANUAL OVERRIDE - LIVING QUARTERS DRONE CONTROL\"")
          }
        ]]></item>
      </useon>
      <object name="Red handle">
        <inherit name="editor_object" />
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
        <pull type="script">
          msg ("Access to Living Quarters now granted.")
          UnlockExit (Exit Armory to Living Quarters)
          UnlockExit (Exit Biosphere to Living Quarters)
          UnlockExit (Exit Med Bay to Living Quarters)
          UnlockExit (Exit Security to Living Quarters)
          UnlockExit (Exit Solar to Living Quarters)
          UnlockExit (Exit Start to Living Quarters)
          AddToInventory (Med Bay Complete)
          SetObjectFlagOn (Check Ship Status, "Med Bay Complete")
        </pull>
      </object>
    </object>
    <object name="Reinforced Door">
      <inherit name="editor_object" />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <look>A Large Reinforced Door. It has been welded shut.</look>
    </object>
    <object name="Spray bottle">
      <inherit name="editor_object" />
    </object>
  </object>
  <object name="Living Quarters">
    <inherit name="editor_room" />
    <description><![CDATA[The living quarters is a large and relatively pleasant area. While the other rooms in the ship have been cold work environments or displays of prestige, this room’s function appears to be simple utility and comfort. <br/><br/>Two couches create a nook on the right side of the room. Behind them in the corner there is a well worn cat tree. The couches are facing towards a small television, game console and in the corner, a cabinet style record player. To the right of the t.v. there is a long corridor of bedroom doors.]]></description>
    <beforeenter type="script">
      play sound ("LQMusic.mp3", false, true)
    </beforeenter>
    <onexit type="script">
      stop sound
    </onexit>
    <exit name="Exit Living Quarters to Solar" to="Solar Array Station">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Living Quarters to Security" to="Security">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Living Quarters to Biosphere" to="Hydroponic Biosphere">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Living Quarters to Med Bay" to="Med Bay">
      <scenery type="boolean">false</scenery>
      <locked />
    </exit>
    <exit name="Exit Living Quarters to AI Core" to="AI Core">
      <locked />
    </exit>
    <object name="Living Quarters Complete">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <scenery />
      <displayverbs type="stringlist" />
      <inventoryverbs type="stringlist" />
      <drop type="boolean">false</drop>
    </object>
    <object name="Cat Tree">
      <inherit name="editor_object" />
      <inherit name="surface" />
      <feature_container />
      <hidechildren type="boolean">false</hidechildren>
      <listchildren type="boolean">false</listchildren>
      <look type="script">
        msg ("A three-tiered cat tree covered in cheap fabric and fur.")
        if (Dead Cat.parent = Cat Tree) {
          msg ("A dead cat lies curled up on the top platform.")
        }
        else if (Got(Dead Cat)) {
          msg ("An impression is left where the cat used to lie.")
        }
      </look>
      <takedeadcat type="script">
        AddToInventory (Dead Cat)
      </takedeadcat>
      <object name="Dead Cat">
        <inherit name="editor_object" />
        <look type="string"></look>
        <take />
        <takemsg>You are now carrying a dead cat in your droid's storage cubby.</takemsg>
        <drop type="boolean">false</drop>
        <feature_usegive />
        <selfuseon type="scriptdictionary">
          <item key="Corridor">
            msg ("On a whim you take a hair from the dead cat and try it on the locked bedroom's DNA scanner. A soft buzzing sound and sharp *click* are heard as the bedroom's door unlocks.")
            SetTimeout (3) {
              msg ("The robot surveys the area. You see someone in the bed. A bio-scan shows no signs of life. Realizing that the cat was likely this crew member's pet, you lay the cat down in the bed with them.")
              MakeObjectInvisible (Dead Cat)
              set (Check Ship Status, "Living Quarters Complete", True)
              SetTimeout (2) {
                msg ("The living quaraters have been fully investigated. There are no signs of life.")
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <object name="Set of Couches">
      <inherit name="editor_object" />
      <takemsg>A couch is far too heavy for a droid to carry around.</takemsg>
      <look type="script">
        msg ("The couches are fluffy with well placed arm rests. The perfect napping couch.")
      </look>
    </object>
    <object name="Record Player">
      <inherit name="editor_object" />
      <isplaying type="boolean">false</isplaying>
      <look type="script">
        msg ("An old record player is gathering dust. There is a translucent red 45 under the needle.")
      </look>
      <play type="script">
        if (Record Player.isplaying = False) {
          msg ("A song begins to play.")
          stop sound
          play sound ("LQRecordMusic.mp3", false, true)
          set (Record Player, "isplaying", True)
        }
        else {
          msg ("The record is already playing.")
        }
      </play>
      <stop type="script">
        if (Record Player.isplaying = True) {
          stop sound
          set (Record Player, "isplaying", False)
          msg ("The record stops playing.")
        }
        else {
          msg ("No record is playing.")
        }
      </stop>
    </object>
    <object name="Corridor">
      <attr name="feature_container" type="boolean">false</attr>
      <look><![CDATA[A long corridor allowing access to several bedroom doors.<br/><br/>{if Check Ship Status.Living Quarters Complete=True: All the doors down the corridor are open.}<br/><br/>{if Check Ship Status.Living Quarters Complete=False: Several doors down the corridor lie open, but the one nearest the robot is closed. A small DNA scanner sits on the wall to the right of the door at belly-button height.}]]></look>
    </object>
    <object name="Small TV">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <look>A blocky, 11" TV.</look>
      <feature_switchable />
      <switchonmsg>The roboto turns on the TV. Only static appears.</switchonmsg>
      <switchoffmsg>The TV screen once again turns black.</switchoffmsg>
    </object>
    <object name="Game Console">
      <inherit name="editor_object" />
      <inherit name="switchable" />
      <look>A well used game console. What first appeared to be a shadow was a colossal crack down the middle.</look>
      <feature_switchable />
      <switchonmsg>The power button on the console clicks, but nothing happens.</switchonmsg>
      <switchoffmsg>The power button on the console clicks, but nothing happens.</switchoffmsg>
      <onswitchon type="script">
        SwitchOff (Game Console)
      </onswitchon>
    </object>
  </object>
  <verb>
    <property>test</property>
    <pattern>test</pattern>
    <defaultexpression>"You can't test " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>plugin</property>
    <pattern>plug in</pattern>
    <defaultexpression>"You can't plug in " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>play</property>
    <pattern>play</pattern>
    <defaultexpression>"You can't play " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>stop</property>
    <pattern>stop</pattern>
    <defaultexpression>"You can't stop " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>takedeadcat</property>
    <pattern>take dead cat</pattern>
    <defaultexpression>"You can't take dead cat " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>opencabinet</property>
    <pattern>open cabinet</pattern>
    <defaultexpression>"You can't open cabinet " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>opendrawer</property>
    <pattern>open drawer</pattern>
    <defaultexpression>"You can't open drawer " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>enterpassword</property>
    <pattern>enter password</pattern>
    <defaultexpression>"You can't enter password " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookunder</property>
    <pattern>look under</pattern>
    <defaultexpression>"You can't look under " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookunderpillow</property>
    <pattern>look under pillow</pattern>
    <defaultexpression>"You can't look under pillow " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>lookunderneath</property>
    <pattern>look underneath</pattern>
    <defaultexpression>"You can't look underneath " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>print</property>
    <pattern>print</pattern>
    <defaultexpression>"You can't print " + object.article + "."</defaultexpression>
  </verb>
  <function name="SRAccessDroids">
    get input {
      if (IsRegexMatch ("yes|y", LCase(result))) {
        msg ("Begining droid access protocols.")
        SRAccessRoom
      }
      else {
        msg ("ERROR")
        msg ("Access repair droids(y/n)?")
        SRAccessDroids
      }
    }
  </function>
  <function name="SRAccessRoom">
    msg ("Please enter the room you would like to access:")
    get input {
      if (IsRegexMatch ("solar|array|solar array", LCase(result))) {
        msg ("Access granted.")
        MoveObject (player, Solar Array Station)
      }
      else {
        msg ("ERROR CODE ORA-10461: ACCESS DENIED, SOLAR ARRAY STATION MUST BE ONLINE")
        SRAccessRoom
      }
    }
  </function>
  <function name="getStatus"><![CDATA[
    msg ("<br/>Koncovka    Status Report:<br/>")
    if (GetBoolean(Check Ship Status, "Solar Array Station Complete")) {
      if (GetBoolean(Check Ship Status, "Biosphere Complete")) {
        if (GetBoolean(Check Ship Status, "Security Complete")) {
          if (GetBoolean(Check Ship Status, "Med Bay Complete")) {
            if (GetBoolean(Check Ship Status, "Living Quarters Complete")) {
              msg ("Station Functional        - COMPLETE")
            }
            else {
              msg ("Station Functional         - Incomplete")
            }
          }
        }
      }
    }
    if (GetBoolean(Check Ship Status, "Solar Array Station Complete")) {
      msg ("Solar Array Station        - ONLINE")
    }
    else {
      msg ("Solar Array Station        - Offline")
    }
    if (GetBoolean(Check Ship Status, "Biosphere Complete")) {
      msg ("Hydroponic Biosphere     - ONLINE")
    }
    else {
      msg ("Hydroponic Biosphere     - Offline")
    }
    if (GetBoolean(Check Ship Status, "Security Complete")) {
      msg ("Security                       - ONLINE")
    }
    else {
      msg ("Security                        - Offline")
    }
    if (GetBoolean(Check Ship Status, "Med Bay Complete")) {
      msg ("Medical Bay                - ONLINE")
    }
    else {
      msg ("Medical Bay                - Offline")
    }
    if (GetBoolean(Check Ship Status, "Living Quarters Complete")) {
      msg ("Living Quarters           - ONLINE")
    }
    else {
      msg ("Living Quarters           - Offline")
    }
  ]]></function>
  <function name="updateStatus">
  </function>
  <function name="SecPuz1" parameters="remaining" type="boolean">
    if (remaining = 0) {
      msg ("YOU HAVE RUN OUT OF BYPASS ATTEMPTS. GOODBYE.")
    }
    else {
      msg ("PLEASE ENTER LEVEL 1 SECURITY BYPASS.")
      msg ("REMAINING ATTEMPTS:" + remaining)
      msg ("PASSWORD HINT: tesqu")
      msg ("ENTER BYPASS CODE:")
      get input {
        if (IsRegexMatch("quest", LCase(result))) {
          msg ("CORRECT")
          SecPuz2 (3)
        }
        else {
          msg ("ERROR. INCORRECT BYPASS CODE.")
          SecPuz1 (remaining-1)
        }
      }
    }
  </function>
  <function name="SecPuz2" parameters="remaining">
    if (remaining = 0) {
      msg ("YOU HAVE RUN OUT OF BYPASS ATTEMPTS. GOODBYE.")
    }
    else {
      msg ("PLEASE ENTER LEVEL 2 SECURITY BYPASS.")
      msg ("REMAINING ATTEMPTS:" + remaining)
      msg ("PASSWORD HINT: llroshcya")
      msg ("ENTER BYPASS CODE:")
      get input {
        if (IsRegexMatch("scholarly", LCase(result))) {
          msg ("CORRECT")
          SecPuz3 (3)
        }
        else {
          msg ("ERROR. INCORRECT BYPASS CODE.")
          SecPuz2 (remaining-1)
        }
      }
    }
  </function>
  <function name="SecPuz3" parameters="remaining">
    if (remaining = 0) {
      msg ("YOU HAVE RUN OUT OF BYPASS ATTEMPTS. GOODBYE.")
    }
    else {
      msg ("PLEASE ENTER LEVEL 3 SECURITY BYPASS.")
      msg ("REMAINING ATTEMPTS:" + remaining)
      msg ("PASSWORD HINT: ogodllsuti")
      msg ("ENTER BYPASS CODE:")
      get input {
        if (IsRegexMatch("ludologist", LCase(result))) {
          msg ("CORRECT")
          msg ("$(ZHU LI! DO THE THING TO TURN OFF THE TURRET HERE!)")
          set (Security, "turret_online", False)
          UnlockExit (SecurityToSecOffice)
        }
        else {
          msg ("ERROR. INCORRECT BYPASS CODE.")
          SecPuz3 (remaining-1)
        }
      }
    }
  </function>
  <function name="unlockExits">
    UnlockExit (Exit Biosphere to Living Quarters)
    UnlockExit (Exit Biosphere to Med Bay)
    UnlockExit (Exit Biosphere to Security)
    UnlockExit (Exit Biosphere to Solar)
    UnlockExit (Exit Living Quarters to Biosphere)
    UnlockExit (Exit Living Quarters to Med Bay)
    UnlockExit (Exit Living Quarters to Security)
    UnlockExit (Exit Living Quarters to Solar)
    UnlockExit (Exit Med Bay to Biosphere)
    UnlockExit (Exit Med Bay to Living Quarters)
    UnlockExit (Exit Med Bay to Security)
    UnlockExit (Exit Med Bay to Solar)
    UnlockExit (Exit Security to Biosphere)
    UnlockExit (Exit Security to Living Quarters)
    UnlockExit (Exit Security to Med Bay)
    UnlockExit (Exit Security to Solar)
    UnlockExit (Exit Solar to Biosphere)
    UnlockExit (Exit Solar to Living Quarters)
    UnlockExit (Exit Solar to Med Bay)
    UnlockExit (Exit Solar to security)
  </function>
</asl>